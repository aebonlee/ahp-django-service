name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Test basic setup
      run: |
        echo "=== Basic Setup Test ==="
        echo "✅ Repository checked out successfully"
        echo "📁 Current directory: $(pwd)"
        echo "📋 Repository contents:"
        ls -la
        echo "✅ Step 1 completed successfully"
        
    - name: Detect project structure
      run: |
        echo "=== Project Structure Analysis ==="
        echo "🔍 Checking for frontend source files..."
        if [ -d "ahp_frontend_src" ]; then
          echo "✅ Frontend source directory found"
          echo "📁 Frontend source contents:"
          ls -la ahp_frontend_src/ | head -10
        else
          echo "❌ Frontend source directory not found"
        fi
        
        echo "🔍 Checking for package.json..."
        if [ -f "ahp_package.json" ]; then
          echo "✅ Package configuration found"
          echo "📋 Package info:"
          head -10 ahp_package.json
        else
          echo "❌ Package configuration not found"
        fi
        
        echo "🔍 Checking for public files..."
        if [ -d "ahp_frontend_public" ]; then
          echo "✅ Public directory found"
          echo "📁 Public contents:"
          ls -la ahp_frontend_public/
        else
          echo "❌ Public directory not found"
        fi
        echo "✅ Step 2 completed successfully"
        
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ahp_package.json
        
    - name: Verify Node.js setup
      run: |
        echo "=== Node.js Environment Verification ==="
        echo "📦 Node.js version:"
        node --version
        echo "📦 npm version:"
        npm --version
        echo "🔍 Checking npm cache:"
        npm config get cache
        echo "✅ Step 3 completed successfully"
        
    - name: Prepare project structure
      run: |
        echo "=== Project Structure Preparation ==="
        echo "🔧 Creating proper package.json..."
        if [ -f "ahp_package.json" ]; then
          cp ahp_package.json package.json
          echo "✅ package.json created from ahp_package.json"
        else
          echo "❌ ahp_package.json not found"
          exit 1
        fi
        
        echo "🔧 Setting up source directories..."
        if [ -d "ahp_frontend_src" ] && [ -d "ahp_frontend_public" ]; then
          mkdir -p src
          cp -r ahp_frontend_src/* src/
          mkdir -p public  
          cp -r ahp_frontend_public/* public/
          echo "✅ Source and public directories prepared"
          echo "📁 Source files copied:"
          ls -la src/ | head -5
          echo "📁 Public files copied:"
          ls -la public/ | head -5
        else
          echo "❌ Required directories not found"
          echo "Available directories:"
          ls -la
          exit 1
        fi
        echo "✅ Step 4 completed successfully"
        
    - name: Install dependencies
      run: |
        echo "=== Dependencies Installation ==="
        echo "📦 Installing npm dependencies..."
        npm ci --verbose
        echo "📋 Installed packages:"
        npm list --depth=0
        echo "✅ Step 5 completed successfully"
        
    - name: Build frontend
      env:
        GENERATE_SOURCEMAP: false
        PUBLIC_URL: .
        CI: false
      run: |
        echo "=== Frontend Build Process ==="
        echo "🏗️ Building React application..."
        echo "Environment variables:"
        echo "GENERATE_SOURCEMAP=$GENERATE_SOURCEMAP"
        echo "PUBLIC_URL=$PUBLIC_URL"
        npm run build:frontend
        echo "📁 Build output:"
        ls -la build/
        echo "📄 Build files:"
        find build/ -type f -name "*.js" -o -name "*.css" -o -name "*.html" | head -10
        echo "📊 Build size:"
        du -sh build/
        echo "✅ Step 6 completed successfully"
        
    - name: Setup GitHub Pages
      uses: actions/configure-pages@v5
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./build
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Verify deployment
      run: |
        echo "=== Deployment Verification ==="
        echo "🚀 Deployment completed successfully!"
        echo "📍 Deployment URL: ${{ steps.deployment.outputs.page_url }}"
        echo "🔍 Checking deployment status..."
        if [ -n "${{ steps.deployment.outputs.page_url }}" ]; then
          echo "✅ GitHub Pages URL available"
        else
          echo "❌ GitHub Pages URL not available"
        fi
        echo "✅ Step 7 completed successfully"
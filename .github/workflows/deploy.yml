name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
    paths: 
      - 'ahp_frontend_public/**'
      - 'ahp_frontend_src/**'
      - 'ahp_package.json'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'ahp_frontend_public/**'
      - 'ahp_frontend_src/**'
      - 'ahp_package.json'
      - '.github/workflows/deploy.yml'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Check frontend source
      run: |
        echo "Checking for frontend files..."
        ls -la
        if [ -d "ahp_frontend_src" ]; then
          echo "Found ahp_frontend_src directory (React source)"
          ls -la ahp_frontend_src/
        elif [ -d "ahp_frontend_public" ]; then
          echo "Found ahp_frontend_public directory (Static files)"
          ls -la ahp_frontend_public/
        else
          echo "No frontend directory found"
          exit 1
        fi
        
    - name: Build React App
      run: |
        if [ -f "ahp_package.json" ]; then
          echo "Building React app from source..."
          
          # Copy package.json
          cp ahp_package.json package.json
          
          # Create proper React app structure
          mkdir -p src public
          
          # Copy source files
          if [ -d "ahp_frontend_src" ]; then
            cp -r ahp_frontend_src/* src/
            echo "✅ Source files copied"
          fi
          
          # Copy public files (only essential ones for build)
          if [ -d "ahp_frontend_public" ]; then
            # Copy only essential public files
            cp ahp_frontend_public/index.html public/ 2>/dev/null || echo "No index.html found"
            cp ahp_frontend_public/manifest.json public/ 2>/dev/null || echo "No manifest.json found"
            cp ahp_frontend_public/favicon.ico public/ 2>/dev/null || echo "No favicon.ico found"
            cp ahp_frontend_public/robots.txt public/ 2>/dev/null || echo "No robots.txt found"
            echo "✅ Essential public files copied"
          fi
          
          # Create default public/index.html if missing
          if [ ! -f "public/index.html" ]; then
            echo "Creating default index.html..."
            cat > public/index.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="AHP Decision Support System" />
    <title>AHP Platform</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>
EOF
          fi
          
          # Install dependencies and build
          npm install
          
          # Fix any TypeScript/build issues
          export GENERATE_SOURCEMAP=false
          export CI=false
          
          # Build the app
          npm run build:frontend
          echo "✅ React build completed"
          ls -la build/
        else
          echo "❌ No package.json found, using static files"
        fi
        
    - name: Prepare deployment files
      run: |
        mkdir -p deploy
        if [ -d "build" ]; then
          echo "Deploying built React app..."
          cp -r build/* deploy/
        elif [ -d "ahp_frontend_public" ]; then
          echo "Deploying static files..."
          cp -r ahp_frontend_public/* deploy/
        fi
        echo "Deployment files prepared"
        ls -la deploy/
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./deploy

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
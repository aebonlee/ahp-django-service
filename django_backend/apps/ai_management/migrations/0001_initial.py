# Generated by Django for AI Management System

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIServicePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('free', '무료 (제한적)'), ('basic', '기본형 ($10/월)'), ('premium', '프리미엄 ($30/월)'), ('enterprise', '기업형 ($100/월)')], max_length=50, unique=True, verbose_name='요금제명')),
                ('display_name', models.CharField(max_length=100, verbose_name='표시명')),
                ('monthly_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='월 요금 ($)')),
                ('monthly_token_limit', models.IntegerField(verbose_name='월간 토큰 한도')),
                ('daily_request_limit', models.IntegerField(verbose_name='일간 요청 한도')),
                ('features', models.JSONField(default=dict, help_text='예: {"chatbot": true, "analysis": true, "generation": false}', verbose_name='사용 가능 기능')),
                ('description', models.TextField(blank=True, verbose_name='요금제 설명')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
            options={
                'verbose_name': 'AI 서비스 요금제',
                'verbose_name_plural': 'AI 서비스 요금제',
                'db_table': 'ai_service_plans',
                'ordering': ['monthly_cost'],
            },
        ),
        migrations.CreateModel(
            name='AIServiceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='설정 이름')),
                ('provider', models.CharField(choices=[('openai', 'OpenAI'), ('claude', 'Claude (Anthropic)'), ('gemini', 'Google Gemini'), ('azure_openai', 'Azure OpenAI')], max_length=20, verbose_name='AI 제공자')),
                ('encrypted_api_key', models.TextField(verbose_name='암호화된 API 키')),
                ('model_name', models.CharField(default='gpt-3.5-turbo', max_length=50, verbose_name='모델명')),
                ('max_tokens', models.IntegerField(default=1000, verbose_name='최대 토큰 수')),
                ('temperature', models.FloatField(default=0.7, verbose_name='창의성 (Temperature)')),
                ('hourly_limit', models.IntegerField(default=100, verbose_name='시간당 요청 한도')),
                ('daily_limit', models.IntegerField(default=1000, verbose_name='일간 요청 한도')),
                ('monthly_limit', models.IntegerField(default=10000, verbose_name='월간 요청 한도')),
                ('system_prompt', models.TextField(blank=True, help_text='AI가 항상 따라야 할 기본 지침', verbose_name='시스템 프롬프트')),
                ('endpoint_url', models.URLField(blank=True, verbose_name='커스텀 엔드포인트 URL')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('is_default', models.BooleanField(default=False, verbose_name='기본 설정')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='생성자')),
            ],
            options={
                'verbose_name': 'AI 서비스 설정',
                'verbose_name_plural': 'AI 서비스 설정',
                'db_table': 'ai_service_settings',
                'ordering': ['-is_default', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PromptTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='템플릿 이름')),
                ('category', models.CharField(choices=[('research', '연구 지원'), ('analysis', '분석'), ('writing', '작성'), ('evaluation', '평가'), ('general', '일반')], max_length=50, verbose_name='카테고리')),
                ('description', models.TextField(verbose_name='설명')),
                ('template', models.TextField(help_text='변수는 {variable_name} 형식으로 사용', verbose_name='프롬프트 템플릿')),
                ('variables', models.JSONField(default=list, help_text='예: [{"name": "topic", "description": "분석 주제", "required": true}]', verbose_name='변수 목록')),
                ('usage_count', models.IntegerField(default=0, verbose_name='사용 횟수')),
                ('average_rating', models.FloatField(default=0.0, verbose_name='평균 평점')),
                ('is_public', models.BooleanField(default=True, verbose_name='공개 템플릿')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='생성자')),
            ],
            options={
                'verbose_name': 'AI 프롬프트 템플릿',
                'verbose_name_plural': 'AI 프롬프트 템플릿',
                'db_table': 'prompt_templates',
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserAIAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tokens_used_today', models.IntegerField(default=0, verbose_name='오늘 사용 토큰')),
                ('tokens_used_month', models.IntegerField(default=0, verbose_name='이번 달 사용 토큰')),
                ('requests_today', models.IntegerField(default=0, verbose_name='오늘 요청 수')),
                ('requests_month', models.IntegerField(default=0, verbose_name='이번 달 요청 수')),
                ('last_reset_date', models.DateField(default=django.utils.timezone.now, verbose_name='마지막 초기화 날짜')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('can_use_advanced_features', models.BooleanField(default=False, verbose_name='고급 기능 사용 가능')),
                ('can_export_conversations', models.BooleanField(default=True, verbose_name='대화 내보내기 가능')),
                ('usage_alert_threshold', models.IntegerField(default=80, verbose_name='사용량 알림 임계값 (%)')),
                ('email_usage_alerts', models.BooleanField(default=True, verbose_name='사용량 알림 이메일 발송')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='할당일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='만료일')),
                ('notes', models.TextField(blank=True, verbose_name='메모')),
                ('ai_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_management.aiserviceplan', verbose_name='AI 요금제')),
                ('ai_settings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai_management.aiservicesettings', verbose_name='AI 설정')),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_ai_access', to=settings.AUTH_USER_MODEL, verbose_name='할당자')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_access', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '사용자 AI 접근 권한',
                'verbose_name_plural': '사용자 AI 접근 권한',
                'db_table': 'user_ai_access',
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.CreateModel(
            name='DevelopmentPromptLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, verbose_name='세션 ID')),
                ('context', models.CharField(default='general', max_length=100, verbose_name='컨텍스트')),
                ('user_prompt', models.TextField(verbose_name='사용자 프롬프트')),
                ('ai_response', models.TextField(blank=True, verbose_name='AI 응답')),
                ('file_saved', models.BooleanField(default=False, verbose_name='파일 저장 완료')),
                ('saved_filename', models.CharField(blank=True, max_length=200, verbose_name='저장된 파일명')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '개발 프롬프트 로그',
                'verbose_name_plural': '개발 프롬프트 로그',
                'db_table': 'development_prompt_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('chatbot', '챗봇 대화'), ('analysis', '데이터 분석'), ('generation', '콘텐츠 생성'), ('translation', '번역'), ('summary', '요약'), ('evaluation', '평가 지원')], max_length=50, verbose_name='요청 유형')),
                ('prompt', models.TextField(verbose_name='프롬프트')),
                ('response', models.TextField(verbose_name='응답')),
                ('tokens_used', models.IntegerField(verbose_name='사용 토큰 수')),
                ('cost', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='비용 ($)')),
                ('response_time', models.FloatField(verbose_name='응답 시간 (초)')),
                ('user_rating', models.IntegerField(blank=True, null=True, verbose_name='사용자 평점 (1-5)')),
                ('user_feedback', models.TextField(blank=True, verbose_name='사용자 피드백')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP 주소')),
                ('user_agent', models.TextField(verbose_name='User Agent')),
                ('session_id', models.CharField(max_length=100, verbose_name='세션 ID')),
                ('model_version', models.CharField(max_length=50, verbose_name='모델 버전')),
                ('error_message', models.TextField(blank=True, verbose_name='오류 메시지')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('ai_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_management.aiservicesettings', verbose_name='AI 설정')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': 'AI 사용 로그',
                'verbose_name_plural': 'AI 사용 로그',
                'db_table': 'ai_usage_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='aiusagelog',
            index=models.Index(fields=['user', 'created_at'], name='ai_usage_logs_user_id_9cf7b7_idx'),
        ),
        migrations.AddIndex(
            model_name='aiusagelog',
            index=models.Index(fields=['request_type', 'created_at'], name='ai_usage_logs_request_type_a7b4e2_idx'),
        ),
        migrations.AddIndex(
            model_name='aiusagelog',
            index=models.Index(fields=['ai_settings', 'created_at'], name='ai_usage_logs_ai_settings_id_8a2c5f_idx'),
        ),
    ]